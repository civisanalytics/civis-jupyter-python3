version: 0.2
phases:
  build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${FIPS_REPOSITORY_URI}
      - echo Logging into Docker Hub
      - echo $DOCKERHUB_PASSWORD | docker login --username ${DOCKERHUB_USERNAME} --password-stdin
      - export COMMIT_HASH_SHORT="$(echo $COMMIT_HASH | cut -c 1-7)"
      - echo Building the Docker image...
      - echo $FIPS_REPOSITORY_URI
      - echo $COMMIT_HASH_SHORT
      - echo $BRANCH_NAME
      - export DS_PYTHON_IMG_VERSION=$(head -n 1 ./.ds_python_version)
      - docker build --build-arg="DS_PYTHON_IMG_VERSION=${DS_PYTHON_IMG_VERSION}" --tag ${FIPS_REPOSITORY_URI}:${COMMIT_HASH_SHORT} --tag ${FIPS_REPOSITORY_URI}:${BRANCH_NAME} --tag civisanalytics/civis-jupyter-python3:${BRANCH_NAME} .
      # This config tests the codebuild login and the build but does not push dev images.
      # The following lines can be temporarily uncommented to test a dev image.
      - docker image push --all-tags ${FIPS_REPOSITORY_URI}
      # - docker image push --all-tags civisanalytics/civis-jupyter-python3
  post_build:
    commands:
      - echo Build completed!
      - printf '{"tag":"%s"}' $COMMIT_HASH_SHORT > build.json
